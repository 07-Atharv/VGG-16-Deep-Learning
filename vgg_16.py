# -*- coding: utf-8 -*-
"""VGG-16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/175HbcAaaqut56E02ANduXLlEHqLfqqJx
"""

from keras.applications.vgg16 import VGG16

model = VGG16()

from keras.preprocessing.image import load_img
image = load_img('/content/drive/MyDrive/Diacom Study/C-07785_jpgimages/1-005.dcm.jpg', target_size=(224, 224))

from keras.preprocessing.image import img_to_array
# convert the image pixels to a numpy array
image = img_to_array(image)
image = image.reshape((1, image.shape[0], image.shape[1], image.shape[2]))

from keras.applications.vgg16 import preprocess_input
# prepare the image for the VGG model
image = preprocess_input(image)

yhat = model.predict(image)

from keras.applications.vgg16 import decode_predictions
# convert the probabilities to class labels
label = decode_predictions(yhat)
# retrieve the most likely result, e.g. highest probability
label = label[0][0]
# print the classification
print('%s (%.2f%%)' % (label[1], label[2]*100))